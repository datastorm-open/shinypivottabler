% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny_pivot_table.R
\name{shinypivottabler}
\alias{shinypivottabler}
\alias{shinypivottablerUI}
\title{Shiny module to render and export pivot tables.}
\usage{
shinypivottabler(input, output, session, data, pivot_cols = NULL,
  indicator_cols = NULL, theme = NULL, export_styles = TRUE)

shinypivottablerUI(id)
}
\arguments{
\item{input}{shiny input}

\item{output}{shiny input}

\item{session}{shiny input}

\item{data}{\code{data.frame} / \code{data.table}. Initial data table.}

\item{pivot_cols}{\code{character} (NULL). Columns to be used as pivot in rows and cols.}

\item{indicator_cols}{\code{character} (NULL). Columns on which indicators will be calculated.}

\item{theme}{\code{list} (NULL). Theme to customize the output of the pivot table.}

\item{export_styles}{\code{boolean} (TRUE). Whether or not to apply styles (like the theme) when exporting to Excel.
Some styles may not be supported by Excel.}

\item{id}{\code{character}. Module input to allow multiple instanciation of the module.}
}
\value{
Nothing. Starts a Shiny module.
}
\description{
Shiny module to render and export pivot tables.
}
\examples{
\dontrun{\donttest{

# create artificial dataset
data <- data.table("V1" = sample(c("A", "B", "C", "D"), size = 1000000,
                                 prob = runif(4, 0, 1), replace = T),
                   "V2" = sample(c("E", "F", "G", "H"), size = 1000000,
                                 prob = runif(4, 0, 1), replace = T),
                   "V3" = sample(c("I", "J", "K", "L"), size = 1000000,
                                 prob = runif(4, 0, 1), replace = T),
                   "V4" = sample(c("M", "N", "O", "P"), size = 1000000,
                                 prob = runif(4, 0, 1), replace = T),
                   "V5" = 1:1000000,
                   "V6" = 1000000:1)

theme <- list(
  fontName="Courier New, Courier",
  fontSize="1.5em",
  headerBackgroundColor = "#217346",
  headerColor = "rgb(255, 255, 255)",
  cellBackgroundColor = "rgb(255, 255, 255)",
  cellColor = "rgb(0, 0, 0)",
  outlineCellBackgroundColor = "rgb(192, 192, 192)",
  outlineCellColor = "rgb(0, 0, 0)",
  totalBackgroundColor = "#59bb28",
  totalColor = "rgb(0, 0, 0)",
  borderColor = "rgb(64, 64, 64)")

ui = shiny::fluidPage(
  shinypivottablerUI(id = "id")
)

server = function(input, output, session) {
  shiny::callModule(module = shinypivottabler,
                    id = "id",
                    data = data,
                    pivot_cols = c("V1", "V2", "V3", "V4"),
                    theme = theme)
}

shiny::shinyApp(ui = ui, server = server)

}}
}
